
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ТекстЗапроса = "select * from <scheme>.<tableName>";
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьТест(Команда)
	ВыполнитьТестНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТестНаСервере()
	
	НастройкиПодключения = PGC_PostgreConnector.ПолучитьСтруктуруНастроекПодключения();
	НастройкиПодключения.АдресСервера = "localhost";
	НастройкиПодключения.ПортСервера = "5432";
	
	НастройкиПодключения.ИмяБазыДанных = "test_bd";
	НастройкиПодключения.ИмяПользователя = "test_user";
	НастройкиПодключения.ПарольПользователя = "test_pwd";
	
	НастройкиПодключения.ОбрабатыватьИсключения = Истина;
	НастройкиПодключения.Типизировать = Типизировать; 
	
	ТаблицаРезультат.Очистить();
	
	ПараметрыЗапросаСоответствие = Новый Соответствие;
	Для Каждого СтрокаПараметров Из ПараметрыЗапроса Цикл
		ПараметрыЗапросаСоответствие.Вставить(СтрокаПараметров.ИмяПараметра, СтрокаПараметров.ЗначениеПараметра);
	КонецЦикла;
	
	РезультатВыполнения = PGC_PostgreConnector.ПолучитьДанныеИзPostgreSQL(НастройкиПодключения, ТекстЗапроса, ПараметрыЗапросаСоответствие);
	Если РезультатВыполнения.УспешноВыполнен Тогда
		ВременнаяТаблица = РезультатВыполнения.ТаблицаДанных;
		Для НомерСтолбца = 1 По ВременнаяТаблица.Колонки.Количество() Цикл
			ТаблицаРезультат.Область(1, НомерСтолбца, 1, НомерСтолбца).Текст = ВременнаяТаблица.Колонки.Получить(НомерСтолбца - 1).Имя;
		КонецЦикла;
		
		НомерСтроки = 2;
		Для Каждого СтрокаТаблицы Из ВременнаяТаблица Цикл
			Для НомерСтолбца = 1 По ВременнаяТаблица.Колонки.Количество() Цикл
				ТаблицаРезультат.Область(НомерСтроки, НомерСтолбца, НомерСтроки, НомерСтолбца).Текст = СтрокаТаблицы[ВременнаяТаблица.Колонки.Получить(НомерСтолбца - 1).Имя];
			КонецЦикла;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	Иначе
		ТаблицаРезультат.Область(1, 1, 1, 1).Текст = РезультатВыполнения.ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры
