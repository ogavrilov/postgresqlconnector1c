#Использовать v8runner

Перем ВременныйКаталог;

Процедура ПодготовитьТестовоеОкружение()
	ИдентификаторТеста = Строка(Новый УникальныйИдентификатор);
	
	ВременныйКаталог = ТекущийСценарий().Каталог + "/" + ИдентификаторТеста;
	СоздатьКаталог(ВременныйКаталог);

	КаталогИБ = ВременныйКаталог + "/testib";
	СоздатьКаталог(КаталогИБ);

	Конфигуратор = Новый УправлениеКонфигуратором();
	Конфигуратор.ИспользоватьВерсиюПлатформы("8.3.20");

	// создаем новую ИБ
	Конфигуратор.СоздатьФайловуюБазу(КаталогИБ);
	Конфигуратор.УстановитьКонтекст("/F""" + КаталогИБ + """", "", "");

	// загружаем конфигурацию
	ПутьИсходнымКодам = СтрЗаменить(ТекущийСценарий().Каталог, "tests", "src/cf");
	Конфигуратор.ЗагрузитьКонфигурациюИзФайлов(ПутьИсходнымКодам, , , , Истина);

	// загружаем конфигурацию расширения из файлов
	ПутьИсходнымКодам = СтрЗаменить(ТекущийСценарий().Каталог, "tests", "src/cfe");
	Конфигуратор.ЗагрузитьРасширениеИзФайлов(ПутьИсходнымКодам, , , , Истина);

	// запускаем первый раз для инициализации (будет создан пользователь с полными правами)
	ПараметрыКоманды = Новый Массив;
	ПараметрыКоманды.Добавить("ENTERPRISE");
	ПараметрыКоманды.Добавить("/F""" + КаталогИБ + """");
	Конфигуратор.ВыполнитьКоманду(ПараметрыКоманды);

	// готовим контейнеры с БД PostgreSQL
	// - подготовим скрипт подготовки контейнеров во временный каталог теста
	ПутьКИсходникуСкриптаПодготовкиКонтейнеров = ТекущийСценарий().Каталог + "/prepareconts.bat";
	ФайлСкриптаПодготовкиКонтейнеров = ВременныйКаталог + "/prepareconts.bat";
	ОбъектЧтения = Новый ЧтениеТекста(ПутьКИсходникуСкриптаПодготовкиКонтейнеров, КодировкаТекста.UTF8);
	ТекстФайла = ОбъектЧтения.Прочитать();
	ОбъектЧтения.Закрыть();
	ТекстФайла = СтрЗаменить(ТекстФайла, "<tempCat>", ВременныйКаталог);
	ТекстФайла = СтрЗаменить(ТекстФайла, "<testsCat>", ТекущийСценарий().Каталог);
	ОбъектЗаписи = Новый ЗаписьТекста(ФайлСкриптаПодготовкиКонтейнеров, КодировкаТекста.UTF8);
	ОбъектЗаписи.Записать(ТекстФайла);
	ОбъектЗаписи.Закрыть();
	
	// - создадим рабочие каталоги для PostgreSQL и PGAdmin
	РабочийКаталогPostrgreSQL = ВременныйКаталог + "/pgdb";
	СоздатьКаталог(РабочийКаталогPostrgreSQL);
	РабочийКаталогPGAdmin = ВременныйКаталог + "/pgadmin";
	СоздатьКаталог(РабочийКаталогPGAdmin);

	// - скопируем файл настроек PGAdmin
	ФайлНастроекPGAdmin = ТекущийСценарий().Каталог + "/pgadmin_servers.json";
	КопироватьФайл(ФайлНастроекPGAdmin, ВременныйКаталог + "/pgadmin_servers.json");

	// - скопируем файл исходной БД
	КопироватьФайл(ТекущийСценарий().Каталог + "/testbd.sql", ВременныйКаталог + "/testbd.sql");

	// - запускаем скрипт подготовки контейнеров
	ЗапуститьПриложение(ФайлСкриптаПодготовкиКонтейнеров, ВременныйКаталог, Истина);

	// запускаем тестовую обработку
	// ПараметрыКоманды = Новый Массив;
	// ПараметрыКоманды.Добавить("ENTERPRISE");
	// ПараметрыКоманды.Добавить("/F""" + КаталогИБ + """");
	// ПараметрыКоманды.Добавить("/N""admin""");
	// ПараметрыКоманды.Добавить("/P""nimda""");
	// ПараметрыКоманды.Добавить("/Execute");
	// ФайлОбработкиВыгрузкиДопОбработок = СтрЗаменить(ТекущийСценарий().Каталог, "tests", "tools/test1.epf");
	// ПараметрыКоманды.Добавить("""" + ФайлОбработкиВыгрузкиДопОбработок + """");
	// Конфигуратор.ВыполнитьКоманду(ПараметрыКоманды);
	
КонецПроцедуры

Процедура УдалитьТестовоеОкружение()
	Если Не ЗначениеЗаполнено(ВременныйКаталог) Тогда
		// поищем первый каталог с именем похожим на идентификатор
		НайденныеФайлы = НайтиФайлы(ТекущийСценарий().Каталог + "/", "*-*-*-*-*");
		Для Каждого НайденныйФайл Из НайденныеФайлы Цикл
			Если НайденныйФайл.ЭтоКаталог() Тогда
				ВременныйКаталог = НайденныйФайл.ПолноеИмя;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	ФайлСкриптаУдаленияКонтейнеров = ТекущийСценарий().Каталог + "/removeconts.bat";
	ЗапуститьПриложение(ФайлСкриптаУдаленияКонтейнеров, ВременныйКаталог, Истина);
	УдалитьФайлы(ВременныйКаталог);
КонецПроцедуры

Подготовка = Истина;
Если АргументыКоманднойСтроки.Количество() > 0 Тогда
	Подготовка = (АргументыКоманднойСтроки[0] = "0");
КонецЕсли;

Если Подготовка Тогда
	ПодготовитьТестовоеОкружение();
Иначе
	УдалитьТестовоеОкружение();
КонецЕсли;
